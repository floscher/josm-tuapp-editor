plugins {
  id "de.undercouch.download" version "2.0.0"
}

apply plugin: 'java'
apply plugin: 'groovy'

group = 'com.trenurbanoapp'
version = '0.0.0-SNAPSHOT'

// Change JOSM version (if needed) before you build
def josmVersion='9060'
def josmLocation='download'

sourceCompatibility=1.7
targetCompatibility=1.7

repositories {
    mavenCentral()
}

dependencies {
    // Josm is not on Maven Central
    compile files("lib/josm-snapshot-${josmVersion}.jar")
    compile("org.postgis:postgis-jdbc:1.3.3") {
        exclude module: 'postgresql'
    }
    compile 'org.postgresql:postgresql:9.4-1206-jdbc41'
    testCompile 'junit:junit:4.8.1'
    testCompile "org.codehaus.groovy:groovy-all:2.4.4"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
}


jar {
    from{
        configurations.compile.findAll
        {
            it.name != "josm-snapshot-${josmVersion}.jar"
        }.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude {
                    it.path.contains('META-INF') && (it.path.endsWith('.SF') || it.path.endsWith('.DSA') || it.path.endsWith('.RSA'))
                }
            }
        }
    }
    manifest {
        attributes("Author": "Víctor Ramírez",
        "Plugin-Class": "com.trenurbanoapp.josm.TrenUrbanoAppSqlPlugin",
        "Plugin-Date": "2015-12-01T23:12:29.582966Z",
        "Plugin-Description": "Allows you to edit Tren Urbano App SQL Scripts",
        "Plugin-Icon": "images/preferences/geojson.png",
        "Plugin-Link": "http://trenurbanoapp.com",
        "Plugin-Mainversion": "9060",
        "Plugin-Version": "31241",
        "Plugin-Canloadatruntime": "false",
        )
    }
}

import de.undercouch.gradle.tasks.download.Download

task downloadJosm(type: Download) {
    description 'Downloads JOSM jar file to lib directory. JOSM is a required dependency for compilation'
    onlyIf {
        def josmJar = new File("lib/josm-snapshot-${josmVersion}.jar")
        !josmJar.exists()
    }
    def folder = new File( 'lib' )
    doFirst {
        if( !folder.exists() ) {
            folder.mkdirs()
        }
    }
    src "http://josm.openstreetmap.de/${josmLocation}/josm-snapshot-${josmVersion}.jar"
    dest folder
}

compileJava.dependsOn(downloadJosm)

import org.gradle.internal.os.OperatingSystem

task installPlugin(type: Copy, dependsOn: jar) {
    description 'After building the distribution jar file, copy the file to the JOSM plugins directory'
    def destStr
    if(OperatingSystem.current().isMacOsX()) {
        destStr = "${System.getProperty('user.home')}/Library/JOSM/plugins"
    } else if(OperatingSystem.current().isWindows()) {
        destStr = "${System.getenv()['APPDATA']}/JOSM/plugins"
    } else {
        destStr = "${System.getProperty('user.home')}/.josm/plugins"
    }
    println(jar.archivePath)
    from jar.archivePath
    into destStr
    rename {
        "${project.name}.jar"
    }
}

/*task runJosm(dependsOn: installPlugin) {
    javaexec {
        main="-jar"
        args "lib/josm-snapshot-${josmVersion}.jar"
    }
}*/
